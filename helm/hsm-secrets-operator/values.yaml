# Default values for hsm-secrets-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Operator image configuration
image:
  repository: ghcr.io/evanjarrett/hsm-secrets-operator
  pullPolicy: IfNotPresent
  tag: ""  # Defaults to the chart appVersion

# Discovery image configuration
# Uses same unified image as manager and discoveryc
discoveryImage:
  repository: ghcr.io/evanjarrett/hsm-secrets-operator
  pullPolicy: IfNotPresent
  tag: ""  # Defaults to the chart appVersion

# Agent image configuration (for HSM agent pods)
# Uses same unified image as manager and discoveryc
agentImage:
  repository: ghcr.io/evanjarrett/hsm-secrets-operator
  pullPolicy: IfNotPresent
  tag: ""  # Defaults to the chart appVersion (uses same unified image)

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Controller manager configuration
controllerManager:
  # Number of replicas for the controller manager
  replicas: 1

  # Resource limits and requests
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 64Mi

  # Security context for the controller container
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - "ALL"

  # Pod security context
  podSecurityContext:
    runAsNonRoot: true
    # runAsUser: 1001

# Service account configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# RBAC configuration
rbac:
  # Specifies whether RBAC resources should be created
  create: true

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Node selector for controller pods
nodeSelector: {}

# Tolerations for controller pods
tolerations: []

# Affinity for controller pods
affinity: {}

# Global HSM configuration (fallback defaults)
hsm:
  # HSM configuration is now handled per-device via HSMDevice CRDs
  # No global client type needed with agent architecture

# Device discovery configuration
# NOTE: Discovery DaemonSets are now created automatically by the manager
# when HSMDevice CRDs are created. No static DaemonSet configuration needed.
discovery:
  # Discovery DaemonSets are now managed dynamically per HSMDevice
  # The following settings apply to all discovery pods created by the manager
  
  # Sync interval for device discovery (e.g., "30s", "1m", "5m")
  syncInterval: "30s"

  # Security context for discovery pods (non-privileged in new architecture)
  podSecurityContext:
    runAsUser: 65534
    runAsGroup: 65534  
    runAsNonRoot: true

  # Container security context for discovery pods
  securityContext:
    privileged: true
    allowPrivilegeEscalation: true
    capabilities:
      drop: []
      add:
        - SYS_ADMIN

# API server configuration
api:
  # Enable the REST API server
  enabled: true
  # Port for the API server
  port: 8090
  # Enable metrics endpoint
  metrics:
    enabled: true
    port: 8443

# Metrics configuration
metrics:
  # Enable metrics collection
  enabled: true
  # Service monitor for Prometheus
  serviceMonitor:
    enabled: false
    namespace: ""
    labels: {}

# Webhook configuration
webhook:
  # Enable admission webhooks
  enabled: false
  port: 9443

  # Certificate configuration
  certManager:
    enabled: false

  # Certificate Secret (when certManager is disabled)
  # You need to provide your own certificates
  secret:
    name: webhook-server-certs

# Health check configuration
health:
  # Health check probe port
  port: 8081

# Leader election configuration
leaderElection:
  enabled: true

# Custom Resource Definitions
crds:
  # Install CRDs as part of the chart
  install: true
  # Keep CRDs when the chart is uninstalled
  keep: true

# HSM Device Configuration
# Each HSMDevice is completely self-contained with its own:
# - Discovery method (USB vendor/product ID, device paths, etc.)
# - PKCS#11 configuration (library path, slot ID, PIN secret)
# - Node selection and device limits
hsmdevice:
  # Enable HSMDevice resource creation
  enabled: false
  # List of HSM devices to create and manage
  # devices:
  #   - name: "pico-hsm-discovery"
  #     namespace: "default"
  #     deviceType: "PicoHSM"
  #     maxDevices: 5
  #     # Discovery configuration
  #     discovery:
  #       usb:
  #         vendorId: "20a0"
  #         productId: "4230"
  #     # PKCS#11 configuration
  #     pkcs11:
  #       libraryPath: "/usr/lib/libsc-hsm-pkcs11.so"
  #       slotId: 0
  #       pinSecret:
  #         name: "pico-hsm-pin"
  #         key: "pin"
  #   - name: "smartcard-hsm-discovery"
  #     namespace: "default"
  #     deviceType: "SmartCard-HSM"
  #     maxDevices: 3
  #     # Discovery configuration
  #     discovery:
  #       usb:
  #         vendorId: "04e6"
  #         productId: "5816"
  #     # PKCS#11 configuration
  #     pkcs11:
  #       libraryPath: "/usr/lib/x86_64-linux-gnu/opensc-pkcs11.so"
  #       slotId: 0
  #       pinSecret:
  #         name: "smartcard-hsm-pin"
  #         key: "pin"
  #   # Example: YubiKey HSM with custom configuration
  #   - name: "yubikey-hsm"
  #     namespace: "default"
  #     deviceType: "Generic"
  #     maxDevices: 2
  #     discovery:
  #       usb:
  #         vendorId: "1050"
  #         productId: "0407"
  #     pkcs11:
  #       libraryPath: "/usr/lib/x86_64-linux-gnu/libykcs11.so"
  #       slotId: 9
  #       tokenLabel: "YubiHSM"
  #       pinSecret:
  #         name: "yubikey-pin"
  #         key: "pin"
  #         namespace: "security"  # Different namespace
  #     # Only create this device on nodes with specific label
  #     nodeSelector:
  #       hsm-type: "yubikey"
  #   # Example: Device path-based discovery for custom HSM
  #   - name: "custom-hsm-path"
  #     namespace: "security"
  #     deviceType: "Generic"
  #     maxDevices: 1
  #     discovery:
  #       devicePath:
  #         path: "/dev/custom-hsm*"
  #         permissions: "0666"
  #     pkcs11:
  #       libraryPath: "/opt/custom-hsm/lib/libcustom-pkcs11.so"
  #       slotId: 1
  #       pinSecret:
  #         name: "custom-hsm-credentials"
  #         key: "hsm-pin"
  #         namespace: "security"

# HSM Secret Configuration
hsmsecret:
  # Enable HSMSecret resource creation
  enabled: false
  # List of HSM secrets to manage
  secrets:
    - name: "example-secret"
      namespace: "default"
      syncInterval: 300

# Additional configuration
config:
  # Default sync interval for HSMSecrets (seconds)
  defaultSyncInterval: 300
  # Default secret type for created Kubernetes secrets
  defaultSecretType: "Opaque"
  # Enable verbose logging
  verboseLogging: false
