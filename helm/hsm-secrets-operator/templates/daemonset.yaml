{{- if .Values.discovery.enabled }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "hsm-secrets-operator.fullname" . }}-discovery
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hsm-secrets-operator.labels" . | nindent 4 }}
    app.kubernetes.io/component: discovery
    app.kubernetes.io/part-of: hsm-secrets-operator
spec:
  selector:
    matchLabels:
      {{- include "hsm-secrets-operator.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: discovery
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "hsm-secrets-operator.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: discovery
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hsm-secrets-operator.serviceAccountName" . }}
      securityContext:
        {{- if .Values.discovery.podSecurityContext }}
        {{- toYaml .Values.discovery.podSecurityContext | nindent 8 }}
        {{- else }}
        {{- toYaml .Values.controllerManager.podSecurityContext | nindent 8 }}
        {{- end }}
      containers:
      - name: discovery
        image: {{ include "hsm-secrets-operator.discoveryImage" . }}
        imagePullPolicy: {{ .Values.discoveryImage.pullPolicy }}
        command:
        - /discovery
        args:
        - --node-name=$(NODE_NAME)
        {{- if .Values.discovery.syncInterval }}
        - --sync-interval={{ .Values.discovery.syncInterval }}
        {{- end }}
        {{- if .Values.config.verboseLogging }}
        - --zap-log-level=debug
        {{- end }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # Discovery configuration is now per-device via HSMDevice CRDs
        # No global discovery environment variables needed
        resources:
          {{- toYaml .Values.controllerManager.resources | nindent 12 }}
        securityContext:
          {{- if .Values.discovery.securityContext }}
          {{- toYaml .Values.discovery.securityContext | nindent 12 }}
          {{- else }}
          {{- toYaml .Values.controllerManager.securityContext | nindent 12 }}
          {{- end }}
        volumeMounts:
        - name: plugins-registry
          mountPath: /var/lib/kubelet/plugins_registry
        - name: device-plugins
          mountPath: /var/lib/kubelet/device-plugins
        - name: dev
          mountPath: /dev
          readOnly: true
        - name: sys
          mountPath: /sys
          readOnly: true
      volumes:
      - name: plugins-registry
        hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: DirectoryOrCreate
      - name: device-plugins
        hostPath:
          path: /var/lib/kubelet/device-plugins
          type: DirectoryOrCreate
      - name: dev
        hostPath:
          path: /dev
          type: Directory
      - name: sys
        hostPath:
          path: /sys
          type: Directory
      hostNetwork: false
      hostPID: false
      hostIPC: false
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
{{- end }}