1. HSM Secrets Operator has been deployed successfully!

   Chart version: {{ .Chart.Version }}
   App version: {{ .Chart.AppVersion }}
   
2. The operator is running with the following configuration:
   
   {{- if .Values.discovery.enabled }}
   🔍 Device Discovery: Enabled (DaemonSet deployed)
   📋 Configuration: Per-device via HSMDevice CRDs
   {{- else }}
   🔍 Device Discovery: Disabled
   {{- end }}
   
   {{- if .Values.hsmdevice.enabled }}
   📱 HSMDevice Resources: {{ len .Values.hsmdevice.devices }} configured
   {{- end }}

3. Check the operator status:
   
   kubectl get deployment {{ include "hsm-secrets-operator.controllerManagerName" . }} -n {{ .Release.Namespace }}
   kubectl logs -f deployment/{{ include "hsm-secrets-operator.controllerManagerName" . }} -n {{ .Release.Namespace }}

4. View Custom Resources:
   
   # List HSM Secrets
   kubectl get hsmsecrets --all-namespaces
   
   # List HSM Devices
   kubectl get hsmdevices --all-namespaces
   
   # Describe a specific HSM Secret (if any exist)
   kubectl describe hsmsecret <secret-name> -n <namespace>

5. Create your first HSM Device and Secret:
   
   # First create an HSMDevice
   cat <<EOF | kubectl apply -f -
   apiVersion: hsm.j5t.io/v1alpha1
   kind: HSMDevice
   metadata:
     name: my-pico-hsm
     namespace: {{ .Release.Namespace }}
   spec:
     deviceType: "PicoHSM"
     discovery:
       usb:
         vendorId: "20a0"
         productId: "4230"
     pkcs11:
       libraryPath: "/usr/lib/libsc-hsm-pkcs11.so"
       slotId: 0
       pinSecret:
         name: "hsm-pin"
         key: "pin"
     maxDevices: 1
   EOF
   
   # Then create an HSMSecret
   cat <<EOF | kubectl apply -f -
   apiVersion: hsm.j5t.io/v1alpha1
   kind: HSMSecret
   metadata:
     name: my-first-secret
     namespace: {{ .Release.Namespace }}
   spec:
     hsmPath: "secrets/{{ .Release.Namespace }}/my-first-secret"
     secretName: "my-first-secret"
     autoSync: true
     syncInterval: {{ .Values.config.defaultSyncInterval }}
   EOF

{{- if .Values.api.enabled }}

6. API Server is available at:
   
   kubectl port-forward svc/{{ include "hsm-secrets-operator.fullname" . }}-api {{ .Values.api.port }}:{{ .Values.api.port }} -n {{ .Release.Namespace }}
   
   Then access: http://localhost:{{ .Values.api.port }}
{{- end }}

{{- if .Values.metrics.enabled }}

7. Metrics are available at:
   
   kubectl port-forward svc/{{ include "hsm-secrets-operator.metricsServiceName" . }} 8443:8443 -n {{ .Release.Namespace }}
   
   Then access: https://localhost:8443/metrics
{{- end }}

{{- if .Values.discovery.enabled }}

8. Device discovery is running. Check discovered devices:
   
   kubectl get hsmdevices --all-namespaces
   kubectl logs daemonset/{{ include "hsm-secrets-operator.fullname" . }}-discovery -n {{ .Release.Namespace }}
{{- end }}

{{- if .Values.hsmsecret.enabled }}

9. HSMSecret resources have been created. Check them with:
   
   kubectl get hsmsecrets -n {{ .Release.Namespace }}
{{- end }}

{{- if .Values.hsmdevice.enabled }}

10. HSMDevice resources have been created. Check them with:
   
    kubectl get hsmdevices -n {{ .Release.Namespace }}
{{- end }}

For more information, visit: https://github.com/evanjarrett/hsm-secrets-operator

Happy secret managing! 🔐