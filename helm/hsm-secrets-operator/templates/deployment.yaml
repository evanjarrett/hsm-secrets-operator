apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hsm-secrets-operator.controllerManagerName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hsm-secrets-operator.labels" . | nindent 4 }}
    control-plane: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/part-of: hsm-secrets-operator
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      {{- include "hsm-secrets-operator.selectorLabels" . | nindent 6 }}
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "hsm-secrets-operator.selectorLabels" . | nindent 8 }}
        control-plane: controller-manager
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hsm-secrets-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.controllerManager.podSecurityContext | nindent 8 }}
      containers:
      - name: manager
        image: {{ include "hsm-secrets-operator.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - --mode=manager
        - --leader-elect={{ .Values.leaderElection.enabled }}
        {{- if .Values.config.verboseLogging }}
        - --zap-log-level=debug
        {{- end }}
        {{- if .Values.metrics.enabled }}
        - --metrics-bind-address=0.0.0.0:8080
        {{- else }}
        - --metrics-bind-address=0
        {{- end }}
        {{- if .Values.health.port }}
        - --health-probe-bind-address=:{{ .Values.health.port }}
        {{- end }}
        - --agent-image={{ include "hsm-secrets-operator.agentImage" . }}
        - --discovery-image={{ include "hsm-secrets-operator.discoveryImage" . }}
        env:
        # PKCS#11 configuration is now per-device via HSMDevice CRDs
        # No global HSM configuration environment variables needed
        - name: DEFAULT_SYNC_INTERVAL
          value: {{ .Values.config.defaultSyncInterval | quote }}
        - name: DEFAULT_SECRET_TYPE
          value: {{ .Values.config.defaultSecretType | quote }}
        # Inject service account name using downward API
        - name: SERVICE_ACCOUNT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        ports:
        {{- if .Values.metrics.enabled }}
        - name: metrics
          containerPort: 8080
          protocol: TCP
        {{- end }}
        {{- if .Values.health.port }}
        - name: health
          containerPort: {{ .Values.health.port }}
          protocol: TCP
        {{- end }}
        {{- if .Values.api.enabled }}
        - name: api
          containerPort: {{ .Values.api.port }}
          protocol: TCP
        {{- end }}
        {{- if .Values.webhook.enabled }}
        - name: webhook
          containerPort: {{ .Values.webhook.port }}
          protocol: TCP
        {{- end }}
        {{- if .Values.health.port }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.health.port }}
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ .Values.health.port }}
          initialDelaySeconds: 5
          periodSeconds: 10
        {{- end }}
        resources:
          {{- toYaml .Values.controllerManager.resources | nindent 12 }}
        securityContext:
          {{- toYaml .Values.controllerManager.securityContext | nindent 12 }}
        {{- if .Values.webhook.enabled }}
        volumeMounts:
        {{- if .Values.webhook.enabled }}
        - name: webhook-certs
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
        {{- end }}
        {{- end }}
      {{- if .Values.webhook.enabled }}
      volumes:
      - name: webhook-certs
        secret:
          secretName: {{ .Values.webhook.secret.name }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
