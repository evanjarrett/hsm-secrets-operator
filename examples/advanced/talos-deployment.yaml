# HSM Secrets Operator deployment for Talos Linux
# Talos has immutable rootfs, so libraries must be provided via containers

---
# ConfigMap with custom PKCS#11 library configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: talos-hsm-config
  namespace: hsm-secrets-operator-system
data:
  # Library installation script
  install-libs.sh: |
    #!/bin/sh
    set -e
    
    echo "Installing PKCS#11 libraries for Talos Linux..."
    
    # Create directories
    mkdir -p /shared/lib/pkcs11
    mkdir -p /shared/etc/pkcs11
    
    # Copy libraries from init container
    if [ -d "/vendor-libs" ]; then
      cp -v /vendor-libs/*.so /shared/lib/pkcs11/
      chmod 755 /shared/lib/pkcs11/*.so
    fi
    
    # Create library configuration
    cat > /shared/etc/pkcs11/pkcs11.conf << EOF
    # PKCS#11 configuration for HSM devices
    module: /shared/lib/pkcs11/opensc-pkcs11.so
    slot-description: OpenSC
    EOF
    
    # List installed libraries
    echo "Installed libraries:"
    ls -la /shared/lib/pkcs11/
    
    echo "Library installation completed"

---
# Init container image with PKCS#11 libraries
# This would be built separately and pushed to your registry
apiVersion: v1
kind: ConfigMap
metadata:
  name: pkcs11-init-dockerfile
  namespace: hsm-secrets-operator-system
data:
  Dockerfile: |
    FROM alpine:3.18
    
    # Install build dependencies
    RUN apk add --no-cache \
        wget \
        unzip \
        build-base \
        autoconf \
        automake \
        libtool \
        pkgconfig \
        openssl-dev \
        libusb-dev \
        pcsc-lite-dev
    
    # Install OpenSC (most common)
    RUN wget https://github.com/OpenSC/OpenSC/releases/download/0.24.0/opensc-0.24.0.tar.gz && \
        tar -xzf opensc-0.24.0.tar.gz && \
        cd opensc-0.24.0 && \
        ./configure --prefix=/usr/local --enable-pcsc --enable-openssl && \
        make && make install
    
    # Install YubiKey library (optional)
    RUN wget https://developers.yubico.com/yubico-piv-tool/Releases/yubico-piv-tool-2.4.0.tar.gz && \
        tar -xzf yubico-piv-tool-2.4.0.tar.gz && \
        cd yubico-piv-tool-2.4.0 && \
        ./configure --prefix=/usr/local && \
        make && make install
    
    # Copy libraries to vendor-libs directory
    RUN mkdir -p /vendor-libs && \
        cp /usr/local/lib/pkcs11/*.so /vendor-libs/ && \
        cp /usr/local/lib/libykcs11*.so /vendor-libs/ 2>/dev/null || true
    
    # Copy installation script
    COPY install-libs.sh /usr/local/bin/
    RUN chmod +x /usr/local/bin/install-libs.sh
    
    ENTRYPOINT ["/usr/local/bin/install-libs.sh"]

---
# Updated HSM Secrets Operator Deployment for Talos
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hsm-secrets-operator-controller-manager
  namespace: hsm-secrets-operator-system
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: hsm-secrets-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: hsm-secrets-operator
    control-plane: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      # Security context for Talos
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      
      # Init container to provide PKCS#11 libraries
      initContainers:
      - name: pkcs11-installer
        # This image contains the PKCS#11 libraries
        image: your-registry.com/pkcs11-libraries:latest
        imagePullPolicy: IfNotPresent
        
        command:
        - /bin/sh
        - -c
        - |
          echo "Setting up PKCS#11 libraries for Talos..."
          
          # Create directory structure
          mkdir -p /shared/lib/pkcs11
          mkdir -p /shared/etc/pkcs11
          
          # Copy pre-built libraries
          cp -v /usr/local/lib/pkcs11/* /shared/lib/pkcs11/ 2>/dev/null || true
          cp -v /usr/local/lib/libykcs11* /shared/lib/pkcs11/ 2>/dev/null || true
          
          # Set permissions
          chmod 755 /shared/lib/pkcs11/*.so
          
          # Create ldconfig cache equivalent
          echo "/shared/lib/pkcs11" > /shared/etc/ld.so.conf
          
          # Verify libraries
          echo "Available PKCS#11 libraries:"
          ls -la /shared/lib/pkcs11/
          
          # Test library loading (basic check)
          for lib in /shared/lib/pkcs11/*.so; do
            if [ -f "$lib" ]; then
              echo "Testing library: $lib"
              # Basic symbol check
              if command -v objdump >/dev/null; then
                objdump -T "$lib" | grep C_GetFunctionList || echo "  Warning: C_GetFunctionList not found"
              fi
            fi
          done
          
          echo "PKCS#11 library setup completed"
        
        volumeMounts:
        - name: pkcs11-libs
          mountPath: /shared
        
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
        
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
      
      containers:
      - name: manager
        args:
        - --leader-elect
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --enable-api=true
        - --api-port=8090
        command:
        - /manager
        image: controller:latest
        
        # Environment variables for library paths
        env:
        - name: LD_LIBRARY_PATH
          value: "/shared/lib/pkcs11:/usr/local/lib"
        - name: PKCS11_MODULE_PATH
          value: "/shared/lib/pkcs11"
        - name: OPENSC_CONF
          value: "/shared/etc/pkcs11/opensc.conf"
        
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
        
        # Mount the shared libraries
        volumeMounts:
        - name: pkcs11-libs
          mountPath: /shared
          readOnly: true
        - name: tmp
          mountPath: /tmp
        
        ports:
        - containerPort: 8090
          name: api
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
      
      volumes:
      - name: pkcs11-libs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      
      serviceAccountName: hsm-secrets-operator-controller-manager
      terminationGracePeriodSeconds: 10
      
      # Node selection for Talos with HSM devices
      nodeSelector:
        node.kubernetes.io/instance-type: worker
      
      # Tolerations for Talos nodes
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal

---
# HSM Device configuration for Talos
apiVersion: hsm.j5t.io/v1alpha1
kind: HSMDevice
metadata:
  name: talos-pico-hsm
  namespace: default
  labels:
    os: talos
    device-type: pico-hsm
spec:
  deviceType: PicoHSM
  
  # USB device discovery
  usb:
    vendorId: "20a0"
    productId: "4230"
  
  # Use the library from shared volume
  pkcs11LibraryPath: "/shared/lib/pkcs11/opensc-pkcs11.so"
  
  # Select Talos worker nodes
  nodeSelector:
    node.kubernetes.io/instance-type: worker
  
  maxDevices: 2
  
  # Enable mirroring for HA on Talos
  mirroring:
    policy: "ReadOnly"
    syncInterval: 300
    autoFailover: true

---
# Service for API access
apiVersion: v1
kind: Service
metadata:
  name: hsm-secrets-operator-api
  namespace: hsm-secrets-operator-system
  labels:
    app.kubernetes.io/component: api
    control-plane: controller-manager
spec:
  ports:
  - name: api
    port: 8090
    protocol: TCP
    targetPort: 8090
  selector:
    control-plane: controller-manager
  type: ClusterIP

---
# NetworkPolicy for Talos security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hsm-operator-talos-policy
  namespace: hsm-secrets-operator-system
spec:
  podSelector:
    matchLabels:
      control-plane: controller-manager
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 8090  # API
    - protocol: TCP
      port: 8080  # Metrics
    - protocol: TCP
      port: 8081  # Health
  egress:
  - {} # Allow all egress for HSM communication and K8s API

---
# Pod Security Policy for Talos (if PSP is enabled)
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: hsm-operator-psp
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'